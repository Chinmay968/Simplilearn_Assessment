@model TheLaptopShop.ViewModel.ItemViewModel
@{
    ViewBag.Title = "Index";
}
<head>
    <script src="https://code.jquery.com/jquery-3.1.0.min.js"></script>
</head>

<h2>Index</h2>

<script type="text/javascript">
    $(document).ready(function () {
        $("#btnSave").click(function () {
            SaveItem();
        });
    });

    function ResetItem() {
        $("#Category_id").val("1");
        $("#Item_Code").val("");
        $("#Item_Name").val("");
        $("#Description").val("");
        $("#Item_Price").val("");
        $("#Image_Path").val("");
    }

    function SaveItem() {
        var formData = new FormData;
        formData.append("Category_id", $("#Category_id").val());
        formData.append("Item_Code", $("#Item_Code").val());
        formData.append("Item_Name", $("#Item_Name").val());
        formData.append("Description", $("#Description").val());
        formData.append("Item_Price", $("#Item_Price").val());
        formData.append("Image_Path", $("#Image_Path").get(0).files[0]);

        $.ajax
            (
                {
                    async: true,
                    dataType: 'JSON',
                    type: 'POST',
                    contentType: false,
                    processData: false,
                    url: '/Item/Index',
                    data: formData,
                    success: function (data) {
                        if (data.Success) {
                            alert(data.Message);
                            ResetItem();
                        }                        
                    },
                    error: function (data) {
                        alert("Item cannot be added due to some issue");
                    }
                }
            );
    }

</script>

<div class="container">
    <div class="col-md-4">
        <div class=" form-group">
            Category :
            @Html.DropDownListFor(model => model.Category_id, new SelectList(Model.CategorySelectListItem, "Value", "Text"),
           new { @class = "form-control" })
        </div>
    </div>

    <div class="col-md-4">
        <div class=" form-group">
            Item Code :
            @Html.TextBoxFor(model => model.Item_Code, new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>

    <div class="col-md-4">
        <div class=" form-group">
            Item Name :
            @Html.TextBoxFor(model => model.Item_Name, new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>

    <div class="col-md-4">
        <div class=" form-group">
            Description :
            @Html.TextBoxFor(model => model.Description, new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>

    <div class="col-md-4">
        <div class=" form-group">
            Item Price :
            @Html.TextBoxFor(model => model.Item_Price, new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>

    <div class="col-md-4">
        <div class=" form-group">
            Image Path :
            @Html.TextBoxFor(model => model.Image_Path, new { type = "file", @class = "form-control" })
        </div>
    </div>

    <div>
        <input type="button" value="Save" name="save" class="btn btn-primary" id="btnSave" />
        &nbsp;
        <input type="button" value="Reset" name="reset" class="btn btn-danger" />
    </div>
</div>

